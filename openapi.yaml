openapi: 3.1.0
info:
  title: RMU Items API
  description: RMU Items API
  contact:
    name: Luis Cabrera
    url: https://github.com/labcabrera
    email: lab.cabrera@gmail.com
  version: 0.1.0
servers:
  - url: http://localhost:3006/v1
tags:
  - name: Items
    description: Items
paths:
  /items:
    get:
      tags:
        - Items
      summary: Find items
      operationId: findItems
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedContentItem'
  /items/{itemId}:
    get:
      tags:
        - Items
      summary: Find item by id
      operationId: findItemById
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item not found
components:
  schemas:
    PagedContentInfo:
      type: object
      properties:
        size:
          type: integer
          format: int32
          example: 10
        totalElements:
          type: integer
          format: int64
          example: 325
        totalPages:
          type: integer
          format: int32
          example: 12
        number:
          type: integer
          format: int32
          example: 0
    PagedContentItem:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        pagination:
          $ref: '#/components/schemas/PagedContentInfo'
    Item:
      type: object
      required:
        - id
        - category
      properties:
        id:
          type: string
          description: Item identifier
          example: dager
        category:
          $ref: '#/components/schemas/ItemCategory'
        weaponRange:
          $ref: '#/components/schemas/WeaponRange'
        weaponType:
          $ref: '#/components/schemas/WeaponType'
        attackTable:
          type: string
        skillId:
          type: string
    ItemCategory:
      type: string
      description: Item category
      enum:
        - weapon
        - armor
        - generic
    WeaponRange:
      type: string
      description: Weapon range
      enum:
        - melee
        - ranged
    WeaponType:
      type: string
      description: Weapon type
      enum:
        - oneHand
        - twoHands